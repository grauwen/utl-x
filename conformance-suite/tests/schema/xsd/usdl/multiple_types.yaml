# Test: USDL to XSD with multiple types
# Verifies multiple type definitions in %types object

description: "Generate XSD with multiple complex types from USDL"

transformation: |
  %utlx 1.0
  input json
  output xsd
  ---
  {
    "%types": {
      Customer: {
        "%kind": "structure",
        "%fields": [
          {
            "%name": "id",
            "%type": "string",
            "%required": true
          }
        ]
      },
      Order: {
        "%kind": "structure",
        "%fields": [
          {
            "%name": "orderId",
            "%type": "string",
            "%required": true
          }
        ]
      }
    }
  }

input:
  format: json
  data: |
      {}

expected:
  format: xml
  data: |
      <?xml version="1.0" encoding="UTF-8"?>
      <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
        <xs:complexType name="Customer">
          <xs:sequence>
            <xs:element name="id" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
        <xs:complexType name="Order">
          <xs:sequence>
            <xs:element name="orderId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:schema>
