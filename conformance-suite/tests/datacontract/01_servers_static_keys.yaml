name: "datacontract_servers_static_keys"
category: "datacontract"
description: "DataContract YAML with static key access - known environment names"
tags: ["datacontract", "yaml", "dynamic-keys", "servers"]

inputs:
  datacontract:
    format: yaml
    data: |
      dataContractSpecification: "1.2.1"
      id: "orders-datacontract"
      info:
        title: "Orders Data Contract"
        version: "1.0.0"

      servers:
        production:
          type: postgres
          host: prod.db.example.com
          port: 5432
          database: orders_db
          schema: public
        staging:
          type: postgres
          host: staging.db.example.com
          port: 5432
          database: orders_db_staging
          schema: public
        development:
          type: postgres
          host: dev.db.example.com
          port: 5432
          database: orders_db_dev
          schema: public

transformation: |
  %utlx 1.0
  input: datacontract yaml
  output json
  ---
  {
    contractId: $datacontract.id,
    title: $datacontract.info.title,
    version: $datacontract.info.version,

    production: {
      environment: "production",
      type: $datacontract.servers.production.type,
      host: $datacontract.servers.production.host,
      port: $datacontract.servers.production.port,
      database: $datacontract.servers.production.database,
      schema: $datacontract.servers.production.schema,
      connectionString: $datacontract.servers.production.type + "://" +
                        $datacontract.servers.production.host + ":" +
                        toString($datacontract.servers.production.port) + "/" +
                        $datacontract.servers.production.database
    },

    staging: {
      environment: "staging",
      type: $datacontract.servers.staging.type,
      host: $datacontract.servers.staging.host,
      port: $datacontract.servers.staging.port,
      database: $datacontract.servers.staging.database,
      schema: $datacontract.servers.staging.schema,
      connectionString: $datacontract.servers.staging.type + "://" +
                        $datacontract.servers.staging.host + ":" +
                        toString($datacontract.servers.staging.port) + "/" +
                        $datacontract.servers.staging.database
    },

    development: {
      environment: "development",
      type: $datacontract.servers.development.type,
      host: $datacontract.servers.development.host,
      port: $datacontract.servers.development.port,
      database: $datacontract.servers.development.database,
      schema: $datacontract.servers.development.schema,
      connectionString: $datacontract.servers.development.type + "://" +
                        $datacontract.servers.development.host + ":" +
                        toString($datacontract.servers.development.port) + "/" +
                        $datacontract.servers.development.database
    }
  }

expected:
  format: json
  data: |
    {
      "contractId": "orders-datacontract",
      "title": "Orders Data Contract",
      "version": "1.0.0",
      "production": {
        "environment": "production",
        "type": "postgres",
        "host": "prod.db.example.com",
        "port": 5432,
        "database": "orders_db",
        "schema": "public",
        "connectionString": "postgres://prod.db.example.com:5432/orders_db"
      },
      "staging": {
        "environment": "staging",
        "type": "postgres",
        "host": "staging.db.example.com",
        "port": 5432,
        "database": "orders_db_staging",
        "schema": "public",
        "connectionString": "postgres://staging.db.example.com:5432/orders_db_staging"
      },
      "development": {
        "environment": "development",
        "type": "postgres",
        "host": "dev.db.example.com",
        "port": 5432,
        "database": "orders_db_dev",
        "schema": "public",
        "connectionString": "postgres://dev.db.example.com:5432/orders_db_dev"
      }
    }

performance_limits:
  max_duration_ms: 200
  max_memory_mb: 20

metadata:
  author: "UTL-X Team"
  created_date: "2025-10-24"
  references:
    - "DataContract Specification v1.2.1"
    - "YAML dynamic keys support"
    - "docs/yaml-dynamic-keys-support.md"
  notes:
    - "Demonstrates static key access pattern (Variant 1)"
    - "Access known environment keys: production, staging, development"
    - "Builds connection strings from server configuration"
    - "Real-world DataContract specification structure"
