name: "multi_input_json_csv_to_json"
category: "multi-input"
description: "JSON and CSV inputs merged to JSON output - Products with sales data"
tags: ["multi-input", "json", "csv", "sales", "analytics"]

inputs:
  products:
    format: json
    data: |
      {
        "products": [
          {
            "productId": "PROD001",
            "name": "Premium Widget",
            "category": "Hardware",
            "costPrice": 15.50
          },
          {
            "productId": "PROD002",
            "name": "Standard Gadget",
            "category": "Software",
            "costPrice": 8.75
          },
          {
            "productId": "PROD003",
            "name": "Deluxe Tool",
            "category": "Hardware",
            "costPrice": 22.00
          }
        ]
      }

  sales:
    format: csv
    data: |
      ProductID,Region,UnitsSold,Revenue,Month
      PROD001,North,150,4500.00,2025-10
      PROD001,South,89,2670.00,2025-10
      PROD002,North,320,9600.00,2025-10
      PROD003,South,45,1980.00,2025-10

transformation: |
  %utlx 1.0
  input: products json, sales csv {headers: true}
  output json
  ---
  {
    SalesAnalysis: {
      Source: "JSON+CSV",
      ProductPerformance: @products.products |> map(product => {
        let productId = product.productId
        let salesData = @sales |> filter(row => row.ProductID == productId)

        ProductID: productId,
        Name: product.name,
        Category: product.category,
        CostPrice: product.costPrice,
        Sales: salesData |> map(sale => {
          Region: sale.Region,
          UnitsSold: parseNumber(sale.UnitsSold),
          Revenue: parseNumber(sale.Revenue)
        }),
        TotalUnitsSold: sum(salesData |> map(s => parseNumber(s.UnitsSold))),
        TotalRevenue: sum(salesData |> map(s => parseNumber(s.Revenue))),
        TotalCost: product.costPrice * sum(salesData |> map(s => parseNumber(s.UnitsSold))),
        Profit: sum(salesData |> map(s => parseNumber(s.Revenue))) -
                (product.costPrice * sum(salesData |> map(s => parseNumber(s.UnitsSold))))
      })
    }
  }

expected:
  format: json
  data: |
    {
      "SalesAnalysis": {
        "Source": "JSON+CSV",
        "ProductPerformance": [
          {
            "ProductID": "PROD001",
            "Name": "Premium Widget",
            "Category": "Hardware",
            "CostPrice": 15.5,
            "Sales": [
              {
                "Region": "North",
                "UnitsSold": 150,
                "Revenue": 4500
              },
              {
                "Region": "South",
                "UnitsSold": 89,
                "Revenue": 2670
              }
            ],
            "TotalUnitsSold": 239,
            "TotalRevenue": 7170,
            "TotalCost": 3704.5,
            "Profit": 3465.5
          },
          {
            "ProductID": "PROD002",
            "Name": "Standard Gadget",
            "Category": "Software",
            "CostPrice": 8.75,
            "Sales": [
              {
                "Region": "North",
                "UnitsSold": 320,
                "Revenue": 9600
              }
            ],
            "TotalUnitsSold": 320,
            "TotalRevenue": 9600,
            "TotalCost": 2800,
            "Profit": 6800
          },
          {
            "ProductID": "PROD003",
            "Name": "Deluxe Tool",
            "Category": "Hardware",
            "CostPrice": 22,
            "Sales": [
              {
                "Region": "South",
                "UnitsSold": 45,
                "Revenue": 1980
              }
            ],
            "TotalUnitsSold": 45,
            "TotalRevenue": 1980,
            "TotalCost": 990,
            "Profit": 990
          }
        ]
      }
    }

performance_limits:
  max_duration_ms: 250
  max_memory_mb: 20

metadata:
  author: "UTL-X Team"
  created_date: "2025-10-21"
  references:
    - "Multiple inputs feature"
    - "Sales analytics"
  notes:
    - "Product catalog (JSON) + Sales transactions (CSV)"
    - "Profit calculation: Revenue - (CostPrice Ã— Units)"
    - "Aggregation across regions"
