name: "multi_input_xml_xml_to_json"
category: "multi-input"
description: "Two XML inputs merged to JSON output - Customer and Order data integration"
tags: ["multi-input", "xml", "json", "integration"]

# This test uses the new multi-input feature
# CLI: utlx transform script.utlx --input customers=input1 --input orders=input2 -o output.json

inputs:
  customers:
    format: xml
    data: |
      <?xml version="1.0" encoding="UTF-8"?>
      <Customers>
        <Customer id="C001">
          <Name>Alice Johnson</Name>
          <Email>alice@example.com</Email>
          <Status>Active</Status>
        </Customer>
        <Customer id="C002">
          <Name>Bob Smith</Name>
          <Email>bob@example.com</Email>
          <Status>Active</Status>
        </Customer>
      </Customers>

  orders:
    format: xml
    data: |
      <?xml version="1.0" encoding="UTF-8"?>
      <Orders>
        <Order id="O001" customerId="C001">
          <Product>Widget</Product>
          <Quantity>5</Quantity>
          <Total>99.95</Total>
        </Order>
        <Order id="O002" customerId="C002">
          <Product>Gadget</Product>
          <Quantity>2</Quantity>
          <Total>149.98</Total>
        </Order>
      </Orders>

transformation: |
  %utlx 1.0
  input: customers xml, orders xml
  output json
  ---
  {
    Integration: {
      Source: "XML+XML",
      Customers: @customers.Customers.Customer |> map(c => {
        CustomerId: c.@id,
        Name: c.Name,
        Email: c.Email,
        Orders: @orders.Orders.Order
          |> filter(o => o.@customerId == c.@id)
          |> map(o => {
              OrderId: o.@id,
              Product: o.Product,
              Quantity: parseNumber(o.Quantity),
              Total: parseNumber(o.Total)
            })
      })
    }
  }

expected:
  format: json
  data: |
    {
      "Integration": {
        "Source": "XML+XML",
        "Customers": [
          {
            "CustomerId": "C001",
            "Name": "Alice Johnson",
            "Email": "alice@example.com",
            "Orders": [
              {
                "OrderId": "O001",
                "Product": "Widget",
                "Quantity": 5,
                "Total": 99.95
              }
            ]
          },
          {
            "CustomerId": "C002",
            "Name": "Bob Smith",
            "Email": "bob@example.com",
            "Orders": [
              {
                "OrderId": "O002",
                "Product": "Gadget",
                "Quantity": 2,
                "Total": 149.98
              }
            ]
          }
        ]
      }
    }

performance_limits:
  max_duration_ms: 200
  max_memory_mb: 20

metadata:
  author: "UTL-X Team"
  created_date: "2025-10-21"
  references:
    - "Multiple inputs feature"
    - "XML to JSON transformation"
  notes:
    - "Demonstrates joining data from two XML sources"
    - "Customer-Order relationship via ID matching"
    - "Both inputs are XML format"
