name: "parse_french_number"
category: "stdlib/regional"
description: "Test parseFrenchNumber function - parse French format numbers (handles multiple space types)"
tags: ["stdlib", "regional", "numbers", "parsing", "french"]

input:
  format: json
  data: |
    {}

transformation: |
  %utlx 1.0
  input json
  output json
  ---
  {
    basic: parseFrenchNumber("1 234,56"),
    no_thousands: parseFrenchNumber("1234,56"),
    large: parseFrenchNumber("1 234 567,89"),
    negative: parseFrenchNumber("-1 234,56"),
    zero: parseFrenchNumber("0,00"),
    integer: parseFrenchNumber("1 234"),
    small: parseFrenchNumber("0,99"),
    no_decimal: parseFrenchNumber("5000")
  }

expected:
  format: json
  data:
    basic: 1234.56
    no_thousands: 1234.56
    large: 1234567.89
    negative: -1234.56
    zero: 0
    integer: 1234
    small: 0.99
    no_decimal: 5000

performance_limits:
  max_duration_ms: 300
  max_memory_mb: 15

metadata:
  author: "UTL-X Conformance"
  source: "regional-number-expansion-2025-10-29"
  complexity: "basic"
  notes:
    - "Tests parseFrenchNumber with various formatted strings"
    - "French format: space thousands separator, comma decimal separator"
    - "Handles regular space (U+0020), non-breaking space (U+00A0), and narrow no-break space (U+202F)"
    - "Parses to standard numeric representation"
    - "Used in France, Belgium, Quebec, and French-speaking regions"
