name: Build Native Binaries

on:
  workflow_dispatch:  # Only run manually
  # push:             # Commented out
  #   branches: [ main, develop ]
  # pull_request:
  #   branches: [ main ]
  release:
    types: [ created ]

jobs:
  build-native:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux-x64
            binary: utlx
          - os: macos-latest
            platform: macos-arm64
            binary: utlx
          - os: windows-latest
            platform: windows-x64
            binary: utlx.exe

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build native binary
        run: ./gradlew :modules:cli:nativeCompile

      - name: Test binary
        run: |
          ./modules/cli/build/native/nativeCompile/${{ matrix.binary }} --version

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: utlx-${{ matrix.platform }}
          path: modules/cli/build/native/nativeCompile/${{ matrix.binary }}

      - name: Upload to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: modules/cli/build/native/nativeCompile/${{ matrix.binary }}
          asset_name: utlx-${{ matrix.platform }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          asset_content_type: application/octet-stream
