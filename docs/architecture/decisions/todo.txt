TODO's

- formats/plugin/
- stLib
- javascript
- JVM
- tools/vscode-extension/
- tools/maven-plugin/
- tools/intellij-plugin/

-stlib: serialize -> render (DOM -> string) , parse (string -> DOM) :: in theory also binary or string could be used :: distinct parsseJson, parseCsv, parseXml, parseYaml, renderXml, renderYaml, renderCsv, renderJson
-stlib: parseNumber missing
-stlib cannonalize  -> XML Canonicalization (C14N) standards:
-stlib cdata handling in XML

Test calls these functions that DON'T exist in the ArrayFunction: 
size(), get(). head(), tail(), slice(), flatMap(), sortBy(), distinct(), distinctBy(), union(), intersect(), diff(), isEmpty(), contains(), none()

Functions.kt 
1. With method reference (cleaner syntax):
  register("map", ArrayFunctions::map)
2. With lambda wrapper (inline syntax):
  register("singularize") { args -> PluralizationFunctions.singularize(args[0]) }

This inconsistency suggests that:
  - Some functions were designed to take List<UDM> directly (proper design)
  - Some functions were designed to take individual parameters and need adapters (inconsistent design)


-lerna?

- Comfornmance suite
- Wasm 
- LLVM Bitcode en MILR (two most used IRs for native)?

DONE: Design time generate an output meta data representation like JSON SCHEMA or XSD based on either an XML input example + UTLX def or XSD (or JSON schema) input +UTLX def 
==> - modules/analysis (without yaml support)
