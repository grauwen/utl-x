<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:ins="http://example.com/schemas/insurance-policy"
           targetNamespace="http://example.com/schemas/insurance-policy"
           elementFormDefault="qualified">

  <xs:annotation>
    <xs:documentation>
      Insurance Policy Schema - Russian Doll Pattern

      All elements and types nested inline within root element.
    </xs:documentation>
  </xs:annotation>

  <!-- Root Element with all nested definitions -->
  <xs:element name="InsurancePolicy">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="PolicyNumber" type="xs:string"/>
        <xs:element name="PolicyType">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="auto"/>
              <xs:enumeration value="home"/>
              <xs:enumeration value="life"/>
              <xs:enumeration value="health"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="EffectiveDate" type="xs:date"/>
        <xs:element name="ExpirationDate" type="xs:date"/>
        <xs:element name="PolicyHolder">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" type="xs:string"/>
              <xs:element name="DateOfBirth" type="xs:date"/>
              <xs:element name="LicenseNumber" type="xs:string"/>
              <xs:element name="Address">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Street" type="xs:string"/>
                    <xs:element name="City" type="xs:string"/>
                    <xs:element name="State" type="xs:string"/>
                    <xs:element name="ZipCode" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Coverage">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CoverageItem" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="CoverageType" type="xs:string"/>
                    <xs:element name="CoverageLimit">
                      <xs:simpleType>
                        <xs:restriction base="xs:decimal">
                          <xs:fractionDigits value="2"/>
                          <xs:minInclusive value="0"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name="Deductible">
                      <xs:simpleType>
                        <xs:restriction base="xs:decimal">
                          <xs:fractionDigits value="2"/>
                          <xs:minInclusive value="0"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Premium">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AnnualPremium">
                <xs:simpleType>
                  <xs:restriction base="xs:decimal">
                    <xs:fractionDigits value="2"/>
                    <xs:minInclusive value="0"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PaymentFrequency">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:enumeration value="monthly"/>
                    <xs:enumeration value="quarterly"/>
                    <xs:enumeration value="annually"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NextPaymentDate" type="xs:date"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Status">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="active"/>
              <xs:enumeration value="expired"/>
              <xs:enumeration value="cancelled"/>
              <xs:enumeration value="pending"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
