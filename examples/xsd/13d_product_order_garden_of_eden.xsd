<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:po="http://example.com/schemas/product-order"
           targetNamespace="http://example.com/schemas/product-order"
           elementFormDefault="qualified">

  <xs:annotation>
    <xs:documentation>
      Product Order Schema - Garden of Eden Pattern

      GARDEN OF EDEN PATTERN:
      - Both elements and types are defined globally
      - Maximum flexibility and reusability
      - Elements can be used anywhere in any order
      - Can lead to invalid document structures if not careful

      Characteristics:
      - All elements are global
      - All types are global (named types)
      - Maximum flexibility
      - Risk of creating invalid structures
      - Good for schema composition and inheritance
    </xs:documentation>
  </xs:annotation>

  <!-- Global Elements -->

  <xs:element name="ProductOrder" type="po:ProductOrderType"/>
  <xs:element name="OrderID" type="xs:string"/>
  <xs:element name="OrderDate" type="xs:date"/>
  <xs:element name="Customer" type="po:CustomerType"/>
  <xs:element name="CustomerID" type="xs:string"/>
  <xs:element name="Name" type="xs:string"/>
  <xs:element name="Email" type="xs:string"/>
  <xs:element name="Address" type="po:AddressType"/>
  <xs:element name="Street" type="xs:string"/>
  <xs:element name="City" type="xs:string"/>
  <xs:element name="State" type="xs:string"/>
  <xs:element name="ZipCode" type="xs:string"/>
  <xs:element name="Items" type="po:ItemsType"/>
  <xs:element name="Item" type="po:ItemType"/>
  <xs:element name="ProductID" type="xs:string"/>
  <xs:element name="ProductName" type="xs:string"/>
  <xs:element name="Quantity" type="xs:positiveInteger"/>
  <xs:element name="Price" type="po:MoneyType"/>
  <xs:element name="Subtotal" type="po:MoneyType"/>
  <xs:element name="Total" type="po:MoneyType"/>
  <xs:element name="Status" type="po:OrderStatusType"/>

  <!-- Global Complex Types -->

  <xs:complexType name="ProductOrderType">
    <xs:sequence>
      <xs:element ref="po:OrderID"/>
      <xs:element ref="po:OrderDate"/>
      <xs:element ref="po:Customer"/>
      <xs:element ref="po:Items"/>
      <xs:element ref="po:Total"/>
      <xs:element ref="po:Status"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CustomerType">
    <xs:sequence>
      <xs:element ref="po:CustomerID"/>
      <xs:element ref="po:Name"/>
      <xs:element ref="po:Email"/>
      <xs:element ref="po:Address"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AddressType">
    <xs:sequence>
      <xs:element ref="po:Street"/>
      <xs:element ref="po:City"/>
      <xs:element ref="po:State"/>
      <xs:element ref="po:ZipCode"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ItemsType">
    <xs:sequence>
      <xs:element ref="po:Item" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ItemType">
    <xs:sequence>
      <xs:element ref="po:ProductID"/>
      <xs:element ref="po:ProductName"/>
      <xs:element ref="po:Quantity"/>
      <xs:element ref="po:Price"/>
      <xs:element ref="po:Subtotal"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Global Simple Types -->

  <xs:simpleType name="MoneyType">
    <xs:restriction base="xs:decimal">
      <xs:fractionDigits value="2"/>
      <xs:minInclusive value="0"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="OrderStatusType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="pending"/>
      <xs:enumeration value="processing"/>
      <xs:enumeration value="shipped"/>
      <xs:enumeration value="delivered"/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
