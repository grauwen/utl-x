<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:emp="http://example.com/schemas/employee-profile"
           targetNamespace="http://example.com/schemas/employee-profile"
           elementFormDefault="qualified">

  <xs:annotation>
    <xs:documentation>
      Employee Profile Schema - Russian Doll Pattern

      All elements and types nested inline within root element.
    </xs:documentation>
  </xs:annotation>

  <!-- Root Element with all nested definitions -->
  <xs:element name="EmployeeProfile">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="EmployeeID" type="xs:string"/>
        <xs:element name="PersonalInfo">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FirstName" type="xs:string"/>
              <xs:element name="LastName" type="xs:string"/>
              <xs:element name="DateOfBirth" type="xs:date"/>
              <xs:element name="Email" type="xs:string"/>
              <xs:element name="Phone" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Employment">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Department" type="xs:string"/>
              <xs:element name="JobTitle" type="xs:string"/>
              <xs:element name="HireDate" type="xs:date"/>
              <xs:element name="EmploymentType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:enumeration value="full-time"/>
                    <xs:enumeration value="part-time"/>
                    <xs:enumeration value="contractor"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Manager">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="EmployeeID" type="xs:string"/>
                    <xs:element name="Name" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Compensation">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Salary">
                <xs:simpleType>
                  <xs:restriction base="xs:decimal">
                    <xs:fractionDigits value="2"/>
                    <xs:minInclusive value="0"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Currency" type="xs:string"/>
              <xs:element name="BonusEligible" type="xs:boolean"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Skills">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Skill" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="SkillName" type="xs:string"/>
                    <xs:element name="Level">
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="beginner"/>
                          <xs:enumeration value="intermediate"/>
                          <xs:enumeration value="advanced"/>
                          <xs:enumeration value="expert"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name="YearsExperience" type="xs:positiveInteger"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
